<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/head'); %>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>

    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/html5-qrcode/2.3.8/html5-qrcode.min.js"
      integrity="sha512-r6rDA7W6ZeQhvl8S7yRVQUKVHdexq+GAlNkNNqVC7YyIV+NwqCTJe2hDWCiffTyRNOeGEzRRJ9ifvRm/HCzGYg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
  </head>

  <body>
    <div class="container">
      <header><%- include('../partials/header'); %></header>

      <div class="dashboard">
        <canvas id="dashboard-chart"></canvas>

        <div class="panel">
          <div class="current-bac">Current BAC: <span id="current-bac">0.0%</span></div>
          <div>
            <button class="btn add" onclick="registerModalOnClick()" data-toggle="modal" data-target="#registerModal">
              Add
            </button>
          </div>
        </div>
      </div>

      <div class="panels">
        <div class="summary-panel panel">
          <h1>Summary</h1>

          <div class="summaries">
            <div>
              <div>You started drinking at</div>
              <div class="time" id="startedDrinkingTime">No data</div>
            </div>
            <div>
              <div>You stopped drinking at</div>
              <div class="time" id="stoppedDrinkingTime">No data</div>
            </div>
            <div>
              <div>You may be driving at</div>
              <div class="time" id="drivingTime">No data</div>
            </div>
            <div>
              <div>You are sober at</div>
              <div class="time" id="soberTime">No data</div>
            </div>
          </div>
        </div>

        <div class="entries-panel panel">
          <div class="header">
            <h1>Entries</h1>
            Last 24 hours
          </div>
          <% if (entries.length > 0) { %>
          <div class="entries-table">
            <table class="table table-bordered">
              <thead>
                <tr>
                  <th>Drink</th>
                  <th>Amount</th>
                  <th>Date</th>
                </tr>

                <% entries.forEach((entry) => { %>

                <tr>
                  <td><%= entry.title%></td>
                  <td><%= entry.amount%></td>
                  <td><%= entry.date%></td>
                </tr>

                <% }); %>
              </thead>
            </table>
          </div>

          <% } else { %>
          <p style="font-weight: bold; color: rgba(99, 132, 255, 1)">No data</p>

          <% } %>
        </div>
      </div>

      <p class="mt-5 text-center text-muted">
        The BAC calculations provided by this app are approximate and may vary among individuals; use the information
        responsibly and consult professional advice if needed.
      </p>
    </div>

    <div class="modal fade" id="registerModal" tabindex="-1" role="dialog">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Add New Entry</h5>
            <button type="button" class="close" data-dismiss="modal">
              <span>&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <form id="add-form">
              <div class="form-check">
                <input
                  type="checkbox"
                  class="form-check-input"
                  id="advancedCheck"
                  name="advancedCheck"
                  onchange="toggleAdvanced(this)"
                />
                <label class="form-check-label" for="advancedCheck">Advanced</label>
              </div>

              <div id="advancedSettings" style="display: none">
                <div class="form-row">
                  <div class="col">
                    <div class="form-group">
                      <label for="volume">Volume (mL)</label>
                      <input
                        class="form-control"
                        type="number"
                        min="0"
                        id="advancedVolume"
                        name="advancedVolume"
                        placeholder="330"
                        value="330"
                      />
                    </div>
                  </div>

                  <div class="col">
                    <div class="form-group">
                      <label for="advancedAlcoholProcentage">Alcohol %</label>
                      <input
                        class="form-control"
                        type="number"
                        min="0"
                        max="100"
                        id="advancedAlcoholProcentage"
                        name="advancedAlcoholProcentage"
                        placeholder="4.6"
                        value="4.6"
                        step="0.1"
                      />
                    </div>
                  </div>
                  <div class="col">
                    <div class="form-group">
                      <label for="amountAdvanced">Amount</label>
                      <input
                        class="form-control"
                        type="number"
                        name="advancedAmount"
                        id="advancedAmount"
                        min="1"
                        value="1"
                      />
                    </div>
                  </div>
                </div>

                <div class="form-row">
                  <div class="col">
                    <div class="form-group">
                      <label for="advancedTitle">Title</label>
                      <input
                        class="form-control"
                        type="text"
                        name="advancedTitle"
                        id="advancedTitle"
                        placeholder="Tuborg (330mL)"
                      />
                    </div>
                  </div>

                  <div class="col">
                    <div class="form-group">
                      <label for="advancedTitle">Barcode (Optional)</label>
                      <input
                        class="form-control"
                        type="text"
                        name="advancedBarcode"
                        id="advancedBarcode"
                        placeholder="5741000116487"
                      />
                    </div>
                  </div>
                </div>
              </div>
              <div id="defaultSettings">
                <div class="form-row">
                  <div class="col">
                    <div class="form-group">
                      <label for="drinkId">Drink</label>
                      <select name="drinkId" id="drinkId" class="form-control">
                        <% drinks.forEach((drink) => { %>
                        <option value="<%=drink.id%>"><%=drink.title%></option>
                        <% })%>
                      </select>
                    </div>
                  </div>
                  <div class="col-4">
                    <div class="form-group">
                      <label for="amount">Amount</label>
                      <input class="form-control" type="number" name="amount" id="amount" min="1" value="1" />
                    </div>
                  </div>
                </div>
              </div>

              <div class="form-row">
                <div class="col-3">
                  <button
                    type="button"
                    class="btn scan-btn"
                    onclick="scanModalOnClick()"
                    data-toggle="modal"
                    data-target="#scanModal"
                  >
                    <img src="/images/barcode-scanner.svg" />
                    Scan
                  </button>
                </div>

                <div class="col-5">
                  <input class="form-control" type="datetime-local" name="datetimePicker" id="datetimePicker" />
                </div>
                <div class="col-4">
                  <button class="btn btn-primary" onclick="submitAddForm(event)" style="width: 100%">Add Drink</button>
                </div>
              </div>

              <p class="message" id="addFormMessage">this</p>
            </form>
          </div>
        </div>
      </div>
    </div>

    <div class="modal" id="scanModal" tabindex="-2" role="dialog">
      <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Scan</h5>
            <button type="button" class="close" data-dismiss="modal">
              <span>&times;</span>
            </button>
          </div>
          <div class="modal-body scan-body">
            <div id="reader" style="width: 100%"></div>
          </div>
          <div class="modal-footer"></div>
        </div>
      </div>
    </div>

    <script
      src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
      integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
      integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"
      integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
      crossorigin="anonymous"
    ></script>
    <script src="/scripts/chart.js"></script>
    <script src="/scripts/utils.js"></script>

    <script>
      function toggleAdvanced(element) {
        const advancedElement = document.getElementById('advancedSettings');
        const defaultElement = document.getElementById('defaultSettings');

        if (element.checked) {
          advancedElement.style.display = 'block';
          defaultElement.style.display = 'none';
        } else {
          advancedElement.style.display = 'none';
          defaultElement.style.display = 'block';
        }
      }
      function registerModalOnClick() {
        // Select the current time by default in the timepicker
        const now = moment();
        document.getElementById('datetimePicker').value = now.format('YYYY-MM-DD HH:mm');
      }

      // Get all the database entries from the route and parse them
      // A bit tricky with the JSON parse and stringify, but it works
      const dataEntries = JSON.parse('<%- JSON.stringify(entries) %>');
      const drinks = JSON.parse('<%- JSON.stringify(drinks) %>');
      const user = JSON.parse('<%- JSON.stringify(user) %>');

      // Get the datasets and plot the chart
      const { groupedEntries, calculations } = generateDatasets(user, dataEntries);

      createChart('dashboard-chart', groupedEntries, calculations);

      // Get the current BAC and display it

      if (Object.keys(groupedEntries).length > 0) {
        const currentDateIndex = Object.keys(groupedEntries).findIndex(
          (date) => moment(date).format('HH') == moment().format('HH')
        );

        const currentBAC = calculations[currentDateIndex]?.toFixed(2);

        const currentBACElement = document.getElementById('current-bac');

        if (currentBAC !== undefined) {
          currentBACElement.innerHTML = `${currentBAC}%`;
        } else {
          currentBACElement.innerHTML = `None`;
        }
        if (currentBAC > 0.5) currentBACElement.classList.add('danger');

        // Update the summaries
        document.getElementById('startedDrinkingTime').innerHTML = moment(Object.keys(groupedEntries)[0]).format(
          'HH:mm'
        );

        const stoppedDrinkingTimeIndex = Object.values(groupedEntries).findLastIndex((e) => e[0].amount > 0);

        document.getElementById('stoppedDrinkingTime').innerHTML = moment(
          Object.keys(groupedEntries)[stoppedDrinkingTimeIndex]
        ).format('HH:mm');

        // Get the index where the BAC is just below 0.50
        // We have the index from where we stopped drinking so we will slice the array from there
        const drivingIndex = calculations.slice(stoppedDrinkingTimeIndex).findIndex((bac) => bac.toFixed(1) <= 0.5);

        document.getElementById('drivingTime').innerHTML = moment(
          Object.keys(groupedEntries).slice(stoppedDrinkingTimeIndex)[drivingIndex]
        ).format('HH:mm');

        document.getElementById('soberTime').innerHTML = moment(
          Object.keys(groupedEntries)[Object.keys(groupedEntries).length - 1]
        ).format('HH:mm');
      }

      function onScanSuccess(_, result) {
        const barcode = result.decodedText;
        const barcodeFormat = result.result.format.format;

        if (barcodeFormat == 9) {
          // Handle the correct format
          // Handle the entry
          // Clear the scanner and and close the modal
          html5QrcodeScanner.clear().then((_) => {
            const existingDrinkIndex = drinks.findIndex((d) => d.barcode == barcode);

            // if above -1 it means it exists
            if (existingDrinkIndex > -1) document.getElementById('drinkId').selectedIndex = existingDrinkIndex;
            else {
              // Handle the advanced checkbox
              const checkbox = document.getElementById('advancedCheck');
              checkbox.checked = true;
              toggleAdvanced(checkbox);

              // Populate the barcode field
              document.getElementById('advancedBarcode').value = barcode;
            }
            $('#scanModal').modal('hide');
          });
        }
      }

      var html5QrcodeScanner = new Html5QrcodeScanner(
        'reader',
        {
          fps: 10,
          qrbox: { width: 300, height: 200 },
          rememberLastUsedCamera: true,
          // Only support camera scan type.
          supportedScanTypes: [Html5QrcodeScanType.SCAN_TYPE_CAMERA]
        },
        false
      );

      // Setup the Barcode Scanner
      function scanModalOnClick() {
        html5QrcodeScanner.render(onScanSuccess);
      }

      function submitAddForm(event) {
        event.preventDefault();
        const formData = new FormData(document.getElementById('add-form'));

        const urlSearchParams = new URLSearchParams(formData);

        fetch('/entries', {
          method: 'POST',
          body: urlSearchParams
        })
          .then((_) => {
            // Request is successfull
            location.reload(); // Will trigger the new entry to show up on the graph
          })
          .catch((err) => {
            console.log(err);
            // Do nothing
            document.getElementById('addFormMessage').innerHTML = err;
          });
      }
    </script>
  </body>
</html>
